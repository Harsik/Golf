# Server Properties  server.servlet.session.cookie.secure true하면 기본 authotity 생성시 sessionid를 생성하지 않는다. 
server.port= 8081
server.compression.enabled=true  
server.servlet.session.cookie.http-only=true
# server.servlet.session.cookie.secure=true   

# Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
# url 설정시 Timezone을 설정하지 않으면 오류가 난다.
spring.datasource.url=jdbc:mysql://192.168.137.59:3306/db_example?serverTimezone=UTC
spring.datasource.username=springuser
spring.datasource.password=ThePassword


# Hibernate Properties

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.hibernate.ddl-auto = update

# Hibernate Logging
logging.level.org.hibernate.SQL= DEBUG

# Initialize the datasource with available DDL and DML scripts
spring.datasource.initialization-mode=always


#Redis specific configurations
# this configurations create Filter implements named springSessionRepositoryFilter
# Session store type.
spring.session.store-type=redis

# Session timeout. If a duration suffix is not specified, seconds is used.
server.servlet.session.timeout = 604800000

 # Sessions flush mode.
spring.session.redis.flush-mode = on-save

# Namespace for keys used to store sessions.
spring.session.redis.namespace = spring : session

spring.redis.host=192.168.137.59
spring.redis.port=6379
spring.redis.password= 

# # spring.redis.lettuce.pool.max-active=7 
# # spring.redis.lettuce.pool.max-idle=7
# # spring.redis.lettuce.pool.min-idle=2
# # spring.redis.lettuce.pool.max-wait=-1ms
# # spring.redis.lettuce.shutdown-timeout=200ms

# # spring.cache.redis.cache-null-values=false
# # spring.cache.redis.time-to-live=600000
# # spring.cache.redis.use-key-prefix=true

# # spring.cache.type=redis
# # spring.cache.cache-names=articleCache,allArticlesCache
